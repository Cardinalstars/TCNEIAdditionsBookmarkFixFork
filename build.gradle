buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.3"
}

apply plugin: 'forge'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}
//--tweakClass org.spongepowered.asm.launch.MixinTweaker --mixin mixins.tcneiadditions.json
version = "1.7.10-${config.project.version}"
group = "ru.timeconqueror.tcneiadditions" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Thaumcraft-NEI-Additions"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"

    replaceIn "src/main/java/ru/timeconqueror/tcneiadditions/TCNEIAdditions.java"
    def versionArray = project.version.tokenize('-')
    replace "GRADLETOKEN_VERSION", versionArray.get(1)
}

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
    maven {
        name = "sponge"
        url = "http://repo.spongepowered.org/maven/"
    }
}

dependencies {
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.118:dev"

    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"

    compile 'org.jetbrains:annotations:18.0.0'

    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

jar {
    manifest {
        attributes([
                "TweakClass": "shaded.org.spongepowered.asm.launch.MixinTweaker",
                'FMLCorePluginContainsFMLMod': 'true',
                "ForceLoadAsMod": true,
                'MixinConfigs': 'mixins.tcneiadditions.json'
        ])
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.tcneiadditions.refmap.json"
shadowJar {
    classifier = ""
    configurations = []
    relocate "org.spongepowered", "shaded.org.spongepowered"

    from refMap
}
tasks.jar.finalizedBy(shadowJar)

/************************************************************
 * Configure reobfuscation
 */

def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"

reobf {
    addExtraSrgFile mixinSrg
}

afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"]
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
        ext.refMap = "mixins.tcneiadditions.refmap.json"
    }
}
